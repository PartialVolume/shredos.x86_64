#!/bin/sh

# trap the ctrl+c signal
trap "echo" INT

# initialise
country_code=""
nwipe_options_string=""
lftp_command_line=""

echo "[`date`] lftp log" > lftp.log

# read the kernel command line for the loadkeys label for setting the correct keyboard layout
country_code=$(kernel_cmdline_extractor loadkeys)
if [ $? == 0 ]
then
	if [ "$country_code" != "" ]
	then
		loadkeys $country_code
	fi
fi

# read the kernel command line for nwipe options
nwipe_options_string=$(kernel_cmdline_extractor nwipe_options)
if [ $? == 0 ]
then
	nwipe_options_flag=1
else
	nwipe_options_flag=0	
fi

# run nwipe with a time stamped log file
while true
do
if [ $nwipe_options_flag == 0 ]
then
    /usr/bin/nwipe --logfile=nwipe_log_$(date +%Y%m%d-%H%M%S).txt
else
    /usr/bin/nwipe --logfile=nwipe_log_$(date +%Y%m%d-%H%M%S).txt $nwipe_options_string
fi

# read the kernel command line for a lftp command
# example lftp command "open 192.168.1.60; user joe joe's_password; cd data; mput nwipe_*.txt
lftp_command_line=$(kernel_cmdline_extractor lftp)
if [ $? == 0 ]
then
	echo "[`date`] Found lftp commands on kernel command line in grub.cfg"
	if [ ! -d "exported" ]; then
		mkdir exported
		echo "[`date`] created exported directory"
	fi
	echo "[`date`] Executing users lftp commands"
	lftp -c "$lftp_command_line" >> lftp.log
	if [ $? == 0 ]
	then
		echo "[`date`] lftp completed sucessfully"
		echo "[`date`] moving nwipe logs to ../exported"
		mv nwipe_*.txt exported/
	else
		echo "[`date`] lftp command failed, See above and lftp.log for details"
	fi
fi

printf ""
printf "Paused, press a key to restart nwipe."
read -rsn1 input
sleep 1;
printf " 4"
sleep 1
printf " 3"
sleep 1;
printf " 2"
sleep 1
printf " 1"
done

