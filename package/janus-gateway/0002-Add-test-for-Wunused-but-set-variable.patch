From c0f075bdee5edabf8f19b68e0880fbd249a89653 Mon Sep 17 00:00:00 2001
From: Thomas Petazzoni <thomas.petazzoni@free-electrons.com>
Date: Sat, 3 Jan 2015 15:09:59 +0100
Subject: [PATCH] Add test for -Wunused-but-set-variable

The -Wunused-but-set-variable option does not exist in some old gcc
versions (gcc 4.5.x), so using it unconditionally breaks the build
with such compilers.

This commit introduces the AX_CHECK_COMPILE_FLAG m4 macro taken from
the autoconf-archive
(http://git.savannah.gnu.org/gitweb/?p=autoconf-archive.git;a=blob_plain;f=m4/ax_check_compile_flag.m4),
and uses it to detect if the -Wunused-but-set-variable option is
supported, and only uses it in this case.

Signed-off-by: Thomas Petazzoni <thomas.petazzoni@free-electrons.com>
(rebased against v0.1.0)
Signed-off-by: Bernd Kuhls <bernd.kuhls@t-online.de>
(rebased against v0.6.3)
Signed-off-by: Adam Duskett <Aduskett@gmail.com>
---
 Makefile.am                 |  1 +
 configure.ac                |  6 ++-
 m4/ax_check_compile_flag.m4 | 74 +++++++++++++++++++++++++++++++++++++
 3 files changed, 79 insertions(+), 2 deletions(-)
 create mode 100644 m4/ax_check_compile_flag.m4

diff --git a/Makefile.am b/Makefile.am
index f961fdb..3ddbe59 100644
--- a/Makefile.am
+++ b/Makefile.am
@@ -151,6 +151,7 @@ janus_CFLAGS = \
 	-DEVENTDIR=\"$(eventdir)\" \
 	-DLOGGERDIR=\"$(loggerdir)\" \
 	-DCONFDIR=\"$(confdir)\" \
+	@GCC_WARN_UNUSED_BUT_SET@ \
 	$(BORINGSSL_CFLAGS) \
 	$(NULL)
 
diff --git a/configure.ac b/configure.ac
index ca17a29..beef91a 100644
--- a/configure.ac
+++ b/configure.ac
@@ -13,6 +13,9 @@ AM_SILENT_RULES([yes])
 AC_USE_SYSTEM_EXTENSIONS
 
 AC_PROG_CC
+AX_CHECK_COMPILE_FLAG([-Wunused-but-set-variable],
+	[GCC_WARN_UNUSED_BUT_SET=-Wunused-but-set-variable])
+AC_SUBST(GCC_WARN_UNUSED_BUT_SET)
 
 LT_PREREQ([2.2])
 LT_INIT
@@ -64,8 +67,7 @@ clang*)
 	CFLAGS="$CFLAGS \
 		-Wcast-align \
 		-Wno-override-init \
-		-Wunsafe-loop-optimizations \
-		-Wunused-but-set-variable"
+		-Wunsafe-loop-optimizations"
 esac
 
 JANUS_VERSION=103
diff --git a/m4/ax_check_compile_flag.m4 b/m4/ax_check_compile_flag.m4
new file mode 100644
index 0000000..51df0c0
--- /dev/null
+++ b/m4/ax_check_compile_flag.m4
@@ -0,0 +1,74 @@
+# ===========================================================================
+#   http://www.gnu.org/software/autoconf-archive/ax_check_compile_flag.html
+# ===========================================================================
+#
+# SYNOPSIS
+#
+#   AX_CHECK_COMPILE_FLAG(FLAG, [ACTION-SUCCESS], [ACTION-FAILURE], [EXTRA-FLAGS], [INPUT])
+#
+# DESCRIPTION
+#
+#   Check whether the given FLAG works with the current language's compiler
+#   or gives an error.  (Warnings, however, are ignored)
+#
+#   ACTION-SUCCESS/ACTION-FAILURE are shell commands to execute on
+#   success/failure.
+#
+#   If EXTRA-FLAGS is defined, it is added to the current language's default
+#   flags (e.g. CFLAGS) when the check is done.  The check is thus made with
+#   the flags: "CFLAGS EXTRA-FLAGS FLAG".  This can for example be used to
+#   force the compiler to issue an error when a bad flag is given.
+#
+#   INPUT gives an alternative input source to AC_COMPILE_IFELSE.
+#
+#   NOTE: Implementation based on AX_CFLAGS_GCC_OPTION. Please keep this
+#   macro in sync with AX_CHECK_{PREPROC,LINK}_FLAG.
+#
+# LICENSE
+#
+#   Copyright (c) 2008 Guido U. Draheim <guidod@gmx.de>
+#   Copyright (c) 2011 Maarten Bosmans <mkbosmans@gmail.com>
+#
+#   This program is free software: you can redistribute it and/or modify it
+#   under the terms of the GNU General Public License as published by the
+#   Free Software Foundation, either version 3 of the License, or (at your
+#   option) any later version.
+#
+#   This program is distributed in the hope that it will be useful, but
+#   WITHOUT ANY WARRANTY; without even the implied warranty of
+#   MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU General
+#   Public License for more details.
+#
+#   You should have received a copy of the GNU General Public License along
+#   with this program. If not, see <http://www.gnu.org/licenses/>.
+#
+#   As a special exception, the respective Autoconf Macro's copyright owner
+#   gives unlimited permission to copy, distribute and modify the configure
+#   scripts that are the output of Autoconf when processing the Macro. You
+#   need not follow the terms of the GNU General Public License when using
+#   or distributing such scripts, even though portions of the text of the
+#   Macro appear in them. The GNU General Public License (GPL) does govern
+#   all other use of the material that constitutes the Autoconf Macro.
+#
+#   This special exception to the GPL applies to versions of the Autoconf
+#   Macro released by the Autoconf Archive. When you make and distribute a
+#   modified version of the Autoconf Macro, you may extend this special
+#   exception to the GPL to apply to your modified version as well.
+
+#serial 3
+
+AC_DEFUN([AX_CHECK_COMPILE_FLAG],
+[AC_PREREQ(2.59)dnl for _AC_LANG_PREFIX
+AS_VAR_PUSHDEF([CACHEVAR],[ax_cv_check_[]_AC_LANG_ABBREV[]flags_$4_$1])dnl
+AC_CACHE_CHECK([whether _AC_LANG compiler accepts $1], CACHEVAR, [
+  ax_check_save_flags=$[]_AC_LANG_PREFIX[]FLAGS
+  _AC_LANG_PREFIX[]FLAGS="$[]_AC_LANG_PREFIX[]FLAGS $4 $1"
+  AC_COMPILE_IFELSE([m4_default([$5],[AC_LANG_PROGRAM()])],
+    [AS_VAR_SET(CACHEVAR,[yes])],
+    [AS_VAR_SET(CACHEVAR,[no])])
+  _AC_LANG_PREFIX[]FLAGS=$ax_check_save_flags])
+AS_IF([test x"AS_VAR_GET(CACHEVAR)" = xyes],
+  [m4_default([$2], :)],
+  [m4_default([$3], :)])
+AS_VAR_POPDEF([CACHEVAR])dnl
+])dnl AX_CHECK_COMPILE_FLAGS
-- 
2.20.1

