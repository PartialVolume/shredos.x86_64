From 4584b69c45b701c3689d6a974f1ee560a79a243e Mon Sep 17 00:00:00 2001
From: Boris Kolpackov <boris@codesynthesis.com>
Date: Mon, 8 Feb 2016 18:39:21 +0200
Subject: [PATCH] Make compilable with GCC 6 in C++14 mode

[Upstream: 61d13eb53ade9f30a64892a901401bda5e42c335]
Signed-off-by: Kamel Bouhara <kamel.bouhara@bootlin.com>
---
 odb/gcc.hxx    | 9 ++++++---
 odb/parser.cxx | 2 ++
 2 files changed, 8 insertions(+), 3 deletions(-)

diff --git a/odb/gcc.hxx b/odb/gcc.hxx
index 858d685..a22357d 100644
--- a/odb/gcc.hxx
+++ b/odb/gcc.hxx
@@ -7,9 +7,12 @@
 
 #include <odb/gcc-fwd.hxx>
 
-#if BUILDING_GCC_MAJOR >= 6
-#  include <safe-ctype.h> // See gcc-fwd.hxx.
-#endif
+// Actually, let's keep it out. With it included we can compile in C++98
+// but not in C++14 (GCC 6 default).
+//
+// #if BUILDING_GCC_MAJOR >= 6
+// #  include <safe-ctype.h> // See gcc-fwd.hxx.
+// #endif
 
 // GCC header includes to get the plugin and parse tree declarations.
 // The order is important and doesn't follow any kind of logic.
diff --git a/odb/parser.cxx b/odb/parser.cxx
index feda9d4..a9d22fb 100644
--- a/odb/parser.cxx
+++ b/odb/parser.cxx
@@ -1831,6 +1831,8 @@ create_type (tree t,
       // the array type. In other words, we view it as "constant array"
       // rather than "array of constant elements".
       //
+      using semantics::array; // vs std::array.
+
       tree bt (TREE_TYPE (t));
       tree bt_mv (TYPE_MAIN_VARIANT (bt));
       type& bt_node (emit_type (bt_mv, access::public_, file, line, clmn));
-- 
2.25.0

